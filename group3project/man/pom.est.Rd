% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pom_exp.R
\name{pom.est}
\alias{pom.est}
\title{POM parameter estimation}
\usage{
pom.est(pom.formula, data.input, SE = T, details = T)
}
\arguments{
\item{pom.formula}{a formula object connected with "~" using the column names of the data matrix}

\item{data.input}{N x C data matrix without intercept. C is the number of variables. The output gives P coefficients
after recoding categorical variables into indicator variables. The function only accept ordered factor as the response variable type.
The function will check KKT optimality conditions for the second derivative, and the output will suggest that continuous predictors be scaled first, if necessary, 
in order to stablize the Hessian matrix approximation.}

\item{SE}{logical; if TRUE, ouputs standard error}

\item{details}{logical; if TRUE, gives detailed optim outcome}
}
\value{
A coefficient estimate matrix and optionally the SE with P + J - 1 rows, with J being the number of response categories.
}
\description{
This function returns the intercept and coefficient estimates of the ordered logit model, allowing
an optional standard error output.
}
\examples{

trn_data$Severity_c = factor(trn_data$Severity, levels = c(1,2,3), 
labels = c(1:length(unique(trn_data$Severity))), ordered = T)
trn_data$temperature_sc = scale(trn_data$`Temperature(F)`)
trn_data$humdity_sc = scale(trn_data$`Humidity(\%)`)
trn_data$pressure_sc = scale(trn_data$`Pressure(in)`)
trn_data$windspeed_sc = scale(trn_data$`Wind_Speed(mph)`)
trn_data$Visibility_sc = scale(trn_data$`Visibility(mi)`)
export.try = pom.est(Severity_c ~ Source + Side + temperature_sc + humdity_sc + pressure_sc + 
                    Visibility_sc + windspeed_sc + Crossing + Traffic_Signal +
                    Sunrise_Sunset + weekday + interstate, data = trn_data, SE = T, details = F)
export.try

}
